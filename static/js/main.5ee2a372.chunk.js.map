{"version":3,"sources":["common/utils.js","components/TimeDisplay/index.js","components/TimeSetter/index.js","components/QuickTimeSetter/index.js","app.js","index.js"],"names":["utils","transInfo2DateMs","info","h","m","s","msSecondsM","msSecondsS","transInfo2Str","cnMap","str","k","formateInfo","formateDate","date","Date","pad","getHours","getMinutes","getSeconds","transMs2Date","mseconds","isPad","parseNumber","n","parseInt","isNeg","Math","abs","flag","parseDate","v","numberStr","len","zeroStr","repeat","String","length","TimeDisplay","className","TimeSetter","maxHour","maxMinute","maxSecond","onChange","children","selectMap","key","max","text","nowInfo","onChangeHandler","e","Number","target","value","map","item","index","Array","fill","idx","QuickTimeSetter","props","lists","onSetTime","JSON","stringify","onClick","tickCb","oldTickCb","alerted","pauseStartDate","App","tickTime","tick","setTimeout","setState","nowDate","reset","leftTime","timeSetterInfo","componentDidMount","clickSetterHandler","countFn","state","endTime","now","pauseStatus","alert","window","confirm","timeSetterChangeHandler","this","isPause","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee2a372.chunk.js","sourcesContent":["const msSecondsS = 1000\nconst msSecondsM = msSecondsS * 60\nconst msSecondsH = msSecondsM * 60\n\nconst utils = {\n  transInfo2DateMs: (info = { h: 0, m: 0, s: 0 }) => {\n    return info.h * msSecondsH + info.m * msSecondsM + info.s * msSecondsS\n  },\n  // 时间信息转中文\n  transInfo2Str: (info = { h: 0, m: 0, s: 0 }) => {\n    const cnMap = {\n      h: \"小时\",\n      m: \"分钟\",\n      s: \"秒\",\n    }\n\n    let str = \"\"\n\n    for (let k in cnMap) {\n      !!info[k] && (str += `${info[k]}${cnMap[k]}`)\n    }\n\n    if (!str) {\n      str = \"0时0分0秒\"\n    }\n\n    return str\n  },\n  // 时间信息格式化\n  formateInfo: (info) => {\n    return {\n      ...{\n        h: 0,\n        m: 0,\n        s: 0,\n      },\n      ...info,\n    }\n  },\n  formateDate: (date) => {\n    if (date instanceof Date) {\n      const h = utils.pad(date.getHours())\n      const m = utils.pad(date.getMinutes())\n      const s = utils.pad(date.getSeconds())\n      return { h, m, s }\n    } else {\n      return {}\n    }\n  },\n  // 毫秒转时间\n  transMs2Date: (mseconds, isPad) => {\n    const parseNumber = (n) => {\n      return isPad ? utils.pad(parseInt(n)) : parseInt(n)\n    }\n\n    let isNeg = mseconds < 0\n\n    mseconds = Math.abs(mseconds)\n\n    const h = parseNumber(mseconds / msSecondsH)\n    const m = parseNumber((mseconds - h * msSecondsH) / msSecondsM)\n    const s = parseNumber(\n      (mseconds - h * msSecondsH - m * msSecondsM) / msSecondsS\n    )\n\n    return {\n      h,\n      m,\n      s,\n      flag: isNeg ? \"-\" : \"\",\n    }\n  },\n  parseDate(v, isPad) {\n    return v instanceof Date\n      ? { ...utils.formateDate(v), ...{ flag: \"\" } }\n      : utils.transMs2Date(v, isPad)\n  },\n  pad: (numberStr, len = 2) => {\n    const zeroStr = \"0\".repeat(len - 1)\n    // const matchNumber = Number(1 + zeroStr)\n    return String(numberStr).length < len ? `${zeroStr}${numberStr}` : numberStr\n  },\n}\nexport default utils\n","import React from \"react\"\nimport utils from \"../../common/utils\"\n\nimport \"./index.scss\"\n\nconst TimeDisplay = ({ date = null }) => {\n  if (typeof date !== \"number\" && !(date instanceof Date)) {\n    return \"--\"\n  }\n  const info = utils.parseDate(date, true)\n\n  return (\n    <span className=\"time-display\">{`${info.flag}${info.h}:${info.m}:${info.s}`}</span>\n  )\n}\n\nexport default TimeDisplay\n","import React, { Fragment } from \"react\"\n\nimport \"./index.scss\"\n\nconst TimeSetter = ({\n  maxHour = 24,\n  maxMinute = 60,\n  maxSecond = 60,\n  onChange,\n  children,\n  info = {\n    h: 0,\n    m: 0,\n    s: 0,\n  },\n}) => {\n  const selectMap = [\n    {\n      key: \"h\",\n      max: maxHour + 1,\n      text: \"时\",\n    },\n    {\n      key: \"m\",\n      max: maxMinute + 1,\n      text: \"分\",\n    },\n    {\n      key: \"s\",\n      max: maxSecond + 1,\n      text: \"秒\",\n    },\n  ]\n\n  let nowInfo = {\n    ...{},\n    ...info,\n  }\n\n  const onChangeHandler = (e, key) => {\n    nowInfo[key] = Number(e.target.value)\n    onChange && onChange(nowInfo)\n  }\n\n  return (\n    <section className=\"time-setter\">\n      {selectMap.map((item, index) => {\n        return (\n          <Fragment key={item.key}>\n            <select\n              onChange={(e) => {\n                onChangeHandler(e, item.key)\n              }}\n              value={info[item.key]}\n            >\n              {new Array(item.max).fill(\"\").map((n, idx) => {\n                return (\n                  <option key={idx} value={idx}>\n                    {idx}\n                  </option>\n                )\n              })}\n            </select>\n            <b className=\"text\">{item.text}</b>\n          </Fragment>\n        )\n      })}\n      {children}\n    </section>\n  )\n}\n\nexport default TimeSetter\n","import React from \"react\"\n\nimport utils from \"../../common/utils\"\n\nimport \"./index.scss\"\n\nconst QuickTimeSetter = (props) => {\n  const { lists = [{ m: 10 }, { m: 30 }, { h: 1 }], onSetTime } = props\n\n  return (\n    <div className=\"quick-time-setter\">\n      {lists.map((item) => {\n        return (\n          <button\n            key={JSON.stringify(item)}\n            onClick={() => {\n              onSetTime && onSetTime(utils.formateInfo(item))\n            }}\n          >\n            +&nbsp;{utils.transInfo2Str(item)}\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default QuickTimeSetter\n","import React, { Component, Fragment } from \"react\"\nimport TimeDisplay from \"./components/TimeDisplay\"\nimport TimeSetter from \"./components/TimeSetter\"\nimport QuickTimeSetter from \"./components/QuickTimeSetter\"\n\nimport \"./reset.scss\"\nimport \"./app.scss\"\n\nimport utils from \"./common/utils\"\n\nlet tickCb = null\nlet oldTickCb = null\nlet alerted = false\n\n// 暂停开始时间\nlet pauseStartDate = null\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      nowDate: new Date(),\n      leftTime: null,\n      // 预计结束的时间\n      endTime: null,\n      timeSetterInfo: {\n        h: 0,\n        m: 0,\n        s: 0,\n      },\n      pauseStatus: 1,\n    }\n  }\n\n  tickTime = () => {\n    const tick = () => {\n      setTimeout(() => {\n        this.setState({\n          nowDate: new Date(),\n        })\n        tick()\n        tickCb && tickCb()\n      }, 1000)\n    }\n\n    tick()\n  }\n\n  reset = () => {\n    tickCb = null\n    this.setState({\n      leftTime: null,\n      timeSetterInfo: utils.formateInfo(0),\n    })\n  }\n  componentDidMount = () => {\n    this.tickTime()\n  }\n\n  clickSetterHandler = () => {\n    const countFn = () => {\n      alerted = false\n      this.setState({\n        leftTime: utils.transInfo2DateMs(this.state.timeSetterInfo),\n        endTime: Date.now() + utils.transInfo2DateMs(this.state.timeSetterInfo),\n        pauseStatus: 1,\n      })\n      tickCb = () => {\n        this.setState(\n          {\n            leftTime: this.state.endTime - Date.now(),\n          },\n          () => {\n            if (this.state.leftTime <= 0) {\n              if (!alerted) {\n                alert(\"done\")\n                alerted = true\n              }\n            }\n          }\n        )\n      }\n    }\n    // 正在倒计时\n    if (tickCb) {\n      const res = window.confirm(\"正在倒计时中，是否重新设置计时时间？\")\n      res && countFn()\n    } else {\n      countFn()\n    }\n  }\n\n  timeSetterChangeHandler = (info) => {\n    this.setState({\n      timeSetterInfo: info,\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"now-time-wrapper\">\n          <span className=\"now-time\">当前时间</span>\n          <TimeDisplay date={this.state.nowDate} />\n        </div>\n        <div className=\"time-setter-wrapper\">\n          <div>设置计时</div>\n          <QuickTimeSetter\n            onSetTime={(info) => {\n              this.setState({\n                timeSetterInfo: utils.transMs2Date(\n                  utils.transInfo2DateMs(this.state.timeSetterInfo) +\n                    utils.transInfo2DateMs(info)\n                ),\n              })\n            }}\n          />\n          <div className=\"control-btn-list\">\n            <button onClick={this.clickSetterHandler}>设置</button>\n            <button\n              onClick={() => {\n                // 当前按钮 显示为暂停\n                const isPause = this.state.pauseStatus === 1\n                this.setState({\n                  pauseStatus: isPause ? 0 : 1,\n                })\n\n                // 暂停\n                if (isPause) {\n                  oldTickCb = tickCb\n                  tickCb = null\n                  pauseStartDate = Date.now()\n                } else {\n                  // 恢复\n                  tickCb = oldTickCb\n                  // 结束时间更新\n                  this.setState({\n                    endTime: this.state.endTime + (Date.now() - pauseStartDate),\n                  })\n                }\n              }}\n            >\n              {this.state.pauseStatus === 1 ? \"暂停\" : \"恢复\"}\n            </button>\n            <button\n              onClick={() => {\n                this.reset()\n              }}\n            >\n              重置\n            </button>\n          </div>\n          <TimeSetter\n            info={this.state.timeSetterInfo}\n            onChange={this.timeSetterChangeHandler}\n          />\n        </div>\n        <div className=\"left-time-wrapper\">\n          <span className=\"left-time\">剩余时间</span>\n          <TimeDisplay date={this.state.leftTime} />\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./app\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}